package com.tripeasy.hotel.hotelservice.restcontroller;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThat;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.junit4.SpringRunner;

import com.tripeasy.hotel.hotelservice.resource.HotelResource;

@RunWith(SpringRunner.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class RestControllerTest {

	@Autowired
	private TestRestTemplate testRestTemplate;

	@Test
	public void testOfWrongURL() throws Exception {

		ResponseEntity<HotelResource> responseEntity = testRestTemplate.getForEntity("/hotel/", HotelResource.class);
		assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);
		assertEquals(HttpStatus.NOT_FOUND, responseEntity.getStatusCode());

	}

	@Test
	public void testOfBasdRequest() throws Exception {

		ResponseEntity<HotelResource> responseEntity = testRestTemplate.getForEntity("/hotels/hotel",
				HotelResource.class);
		assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);
		assertEquals(HttpStatus.BAD_REQUEST, responseEntity.getStatusCode());

	}

	@Test
	public void testOfRightURL() throws Exception {

		ResponseEntity<HotelResource> responseEntity = testRestTemplate.getForEntity("/hotels/", HotelResource.class);
		assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.OK);
	}
}
